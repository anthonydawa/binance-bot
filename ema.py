# import pickle
import numpy as np

def ExpMovingAverage(values,window):
    vals=[]
    for x in values:
        convert_to_int = float(x)
        vals.append(convert_to_int)
    weights = np.exp(np.linspace(-1.,0.,window))
    weights /= weights.sum()
    a = np.convolve(vals,weights) [:len(vals)]
    a[:window] = a[window]
    print(a)
    return a

def ExMa(values,window):
    weights = np.exp(np.linspace(-1.,0.,window))
    weights /= weights.sum()

    a = np.convolve(values,weights)[:len(values)]
    a[:window]=a[window]
    return a 



# with open('ETHUSDT','rb') as dataset_file:
#     new_data = pickle.load(dataset_file)
    # print(ExpMovingAverage)

# xx = ['57383.17000000', '57449.77000000', '57496.42000000', '57512.84000000', '57540.00000000', '57604.17000000', '57651.96000000', '57621.36000000', '57614.04000000', '57701.80000000', '57736.95000000', '57769.23000000', '57732.12000000', '57676.25000000', '57667.89000000', '57689.13000000', '57663.99000000', '57673.58000000', '57656.93000000', '57665.99000000', '57618.91000000', '57637.50000000', '57635.47000000', '57638.15000000', '57457.97000000', '57641.86000000', '57586.62000000', '57629.03000000', '57566.68000000', '57594.11000000', '57548.69000000', '57527.34000000', '57476.35000000', '57440.54000000', '57429.99000000', '57431.82000000', '57500.00000000', '57459.25000000', '57434.54000000', '57473.99000000', '57429.20000000', '57469.98000000', '57516.71000000', '57475.15000000', '57558.83000000', '57574.46000000', '57600.03000000', '57686.24000000', '57693.14000000', '57607.65000000', '57647.74000000', '57653.88000000', '57667.37000000', '57620.99000000', '57636.80000000', '57658.81000000', '57603.62000000', '57610.94000000', '57666.73000000', '57709.83000000', '57707.01000000', '57669.14000000', '57673.13000000', '57690.19000000', '57694.95000000', '57703.91000000', '57727.53000000', '57756.98000000', '57709.17000000', '57699.96000000', '57634.64000000', '57621.10000000', '57592.99000000', '57538.04000000', '57540.53000000', '57535.78000000', '57557.01000000', '57550.00000000', '57520.29000000', '57557.89000000', '57563.49000000', '57560.25000000', '57520.41000000', '57478.71000000', '57416.92000000', '57470.89000000', '57460.77000000', '57482.87000000', '57426.77000000', '57437.70000000', '57470.97000000', '57457.81000000', '57504.11000000', '57575.48000000', '57608.50000000', '57585.30000000', '57538.61000000', '57589.97000000', '57470.01000000', '57522.99000000', '57453.16000000', '57452.97000000', '57409.98000000', '57412.75000000', '57409.19000000', '57419.68000000', '57400.00000000', '57416.18000000', '57398.07000000', '57361.95000000', '57430.92000000', '57446.21000000', '57380.96000000', '57308.40000000', '57318.85000000', '57360.00000000', '57323.96000000', '57381.92000000', '57375.01000000', '57369.32000000', '57373.93000000', '57356.07000000', '57389.95000000', '57406.23000000', '57357.46000000', '57340.21000000', '57374.09000000', '57303.04000000', '57382.64000000', '57294.38000000', '57335.35000000', '57375.57000000', '57411.05000000', '57478.56000000', '57434.37000000', '57438.02000000', '57432.38000000', '57400.74000000', '57435.43000000', '57405.65000000', '57446.84000000', '57413.21000000', '57439.67000000', '57300.18000000', '57293.27000000', '57275.52000000', '57273.04000000', '57237.57000000', '57313.33000000', '57244.14000000', '57274.06000000', '57279.99000000', '57236.88000000', '57265.14000000', '57274.18000000', '57253.73000000', '57285.89000000', '57268.84000000', '57213.66000000', '57234.42000000', '57270.19000000', '57298.00000000', '57297.59000000', '57271.24000000', '57327.71000000', '57313.20000000', '57276.28000000', '57290.00000000', '57347.80000000', '57291.02000000', '57306.22000000', '57349.15000000', '57350.00000000', '57317.85000000', '57303.41000000', '57272.91000000', '57247.21000000', '57277.90000000', '57250.37000000', '57204.43000000', '57200.01000000', '57328.11000000', '57366.75000000', '57320.63000000', '57299.99000000', '57315.00000000', '57280.90000000', '57439.15000000', '57328.82000000', '57280.90000000', '57286.51000000', '57289.41000000', '57267.01000000', '57294.53000000', '57263.98000000', '57252.97000000', '57323.08000000', '57269.80000000', '57256.82000000', '57259.02000000', '57306.82000000']
# xy = np.array(xx)

# ExpMovingAverage(xy,200)



# x = [100.2201,100.23003]


# def roundup(data):
#     for i in data:
#         newx = []
#         newx.append(round(data[i],2))
#     return newx

# print(roundup(x))
